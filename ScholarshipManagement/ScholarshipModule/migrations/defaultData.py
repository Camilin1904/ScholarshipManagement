# Generated by Django 4.2.5 on 2023-11-13 19:23

from django.db import migrations
from ..models import *
from django.contrib.auth.hashers import make_password
from ..models import ScholarsipTypes


class Migration(migrations.Migration):

    dependencies = [ ('ScholarshipModule', '0001_initial'),   ]

    def insert_default_values(apps, schema_editor):

        usersValues = [
            ["0","admin@gmail.com", "Admin", "ADMIN"],
            ["1","financial@gmail.com", "Financial", "FINANCIAL"],
            ["2","philanthropy@gmail.com", "Philanthropy", "PHILANTHROPY"],
            ["3","default@gmail.com", "Default", "DEFAULT"]]

        for user in usersValues:
            if user[0] == "0":
                User(username = user[1], name = user[2], password = make_password(user[3]), role = 0).save()
            elif user[0] == "1":
                User(username = user[1], name = user[2], password = make_password(user[3]), role = 1).save()
            elif user[0] == "2":
                User(username = user[1], name = user[2], password = make_password(user[3]), role = 2).save()
            else:
                User(username = user[1], name = user[2], password = make_password(user[3]), role = 3).save()

        donorsValues = [
            "John Doe",
            "Alice Johnson",
            "Robert Smith",
            "Emily Davis",
            "Michael Brown",
            "Samantha White",
            "Christopher Lee",
            "Olivia Taylor",
            "Daniel Miller",
            "Sophia Anderson"
        ]


        for donor in donorsValues:
            Donors(name = donor).save()

        scholarshipsValues = [
            [1, "Beca de Mérito", "Beca para logros académicos destacados", 1, "Promedio superior a 3.5", False],
            [2, "Beca Basada en Necesidades", "Ayuda financiera para estudiantes con necesidades", 2, "Demostrar necesidad financiera", False],
            [3, "Beca de Excelencia en STEM", "Apoyo a estudiantes en disciplinas STEM", 3, "Carrera en una disciplina STEM", False],
            [4, "Subvención de Artes y Humanidades", "Financiamiento para estudiantes en artes y humanidades", 4, "Carrera en artes o humanidades", False],
            [5, "Premio de Servicio Comunitario", "Reconocimiento por servicio comunitario destacado", 5, "Horas documentadas de servicio comunitario", False],
            [6, "Beca de Ciudadanía Global", "Apoyo a estudiantes con una perspectiva global", 6, "Compromiso demostrado con problemas globales", False],
            [7, "Subvención de Excelencia en Liderazgo", "Financiamiento para líderes estudiantiles", 7, "Experiencia comprobada en liderazgo", False],
            [8, "Beca de Ciencias de la Salud", "Apoyo a estudiantes en ciencias de la salud", 8, "Carrera en ciencias de la salud", False],
            [9, "Premio de Conciencia Ambiental", "Reconocimiento por compromiso con problemas ambientales", 9, "Iniciativas ambientales documentadas", False],
            [10, "Subvención de Tecnología e Innovación", "Financiamiento para estudiantes en tecnología e innovación", 10, "Carrera en tecnología o campo relacionado", False]
        ]


        for scholarship in scholarshipsValues:
            Scholarships(
                ID = scholarship[0], name = scholarship[1], description = scholarship[2],
                requirements = scholarship[4], donor_id = scholarship[3], isDeleted = scholarship[5]
            ).save()

        typesValues = [
            [1, ScholarsipTypes.SchUnit.PERCENTAGE, 50.0, "Descuento"],
            [1, ScholarsipTypes.SchUnit.MONEY, 1000.0, "Monto Fijo"],
            [2, ScholarsipTypes.SchUnit.MONEY, 500.0, "Ayuda Financiera"],
            [3, ScholarsipTypes.SchUnit.PERCENTAGE, 40.0, "Descuento"],
            [4, ScholarsipTypes.SchUnit.MONEY, 800.0, "Monto Fijo"],
            [5, ScholarsipTypes.SchUnit.PERCENTAGE, 30.0, "Descuento"],
            [6, ScholarsipTypes.SchUnit.MONEY, 1200.0, "Monto Fijo"],
            [7, ScholarsipTypes.SchUnit.PERCENTAGE, 25.0, "Descuento"],
            [8, ScholarsipTypes.SchUnit.MONEY, 900.0, "Monto Fijo"],
            [9, ScholarsipTypes.SchUnit.PERCENTAGE, 20.0, "Descuento"],
            [10, ScholarsipTypes.SchUnit.MONEY, 1100.0, "Monto Fijo"]
        ]

        for type in typesValues:
            ScholarsipTypes(
                scholarship_id = type[0], unit = type[1], value = type[2], type = type[3]
            ).save()

        announcementsValues = [
            0, 2, 1, 1, 2
        ]

        for announcement in announcementsValues:
            Announcements(
                type = announcement
            ).save()

        eventsValues = [
            [1, '2023-10-31', '2023-11-04', 'Inscription'],
            [1, '2023-11-06', '2023-11-09', 'Interview'],
            [1, '2023-11-11', '2023-11-14', 'Selection'],
            [1, '2023-11-15', '2023-11-17', 'Publication'],
            [2, '2023-11-19', '2023-11-20', 'Inscription'],
            [2, '2023-11-22', '2023-11-26', 'Interview'],
            [2, '2023-11-27', '2023-11-30', 'Selection'],
            [2, '2023-12-06', '2023-12-09', 'Publication'],
            [3, '2023-12-11', '2023-12-14', 'Inscription'],
            [3, '2023-12-16', '2023-12-19', 'Interview'],
            [3, '2023-12-21', '2023-12-22', 'Selection'],
            [3, '2023-12-23', '2023-12-24', 'Publication'],
            [4, '2023-12-26', '2024-11-01', 'Inscription'],
            [4, '2024-01-02', '2024-12-05', 'Interview'],
            [4, '2024-01-10', '2024-01-13', 'Selection'],
            [4, '2024-01-15', '2024-01-18', 'Publication'],
            [5, '2023-12-26', '2024-11-01', 'Inscription'],
            [5, '2024-01-02', '2024-12-05', 'Interview'],
            [5, '2024-01-10', '2024-01-13', 'Selection'],
            [5, '2024-01-15', '2024-01-18', 'Publication'],
        ]

        for event in eventsValues:
            AnnouncementEvent(
                startingDate = event[1], endDate = event[2], type = event[3], announcementId_id = event[0]
            ).save()

        scholarshipAnnouncementsValues = [
            [1,  1],
            [2,  2],
            [3,  3],
            [4,  4],
            [5,  5]
        ]

        for scholarshipAnnouncement in scholarshipAnnouncementsValues:
            ScholarshipAnnouncements(
                announcementId_id = scholarshipAnnouncement[0],
                scholarshipId_id = scholarshipAnnouncement[1]
            ).save()

        applicantValues = [
            ["Fernando", "Ruiz", "A020100", "Ciencias Administrativas y Económicas", "Administración de Empresas", 1, "fernando@gmail.com", "3201883020", 3, "", False],
            ["Ana", "Gomez", "A020101", "Ciencias de la Salud", "Medicina", 2, "ana@gmail.com", "3212345678", 2, "", False],
            ["Carlos", "Hernandez", "A020102", "Ingeniería, Diseño y Ciencias Aplicadas", "Ingeniería de Sistemas", 3, "carlos@gmail.com", "3223456789", 1, "", False],
            ["Laura", "Martinez", "A020103", "Ciencias Humanas", "Licenciatura en Artes", 4, "laura@gmail.com", "3334567890", 3, "", False],
            ["David", "Perez", "A020104", "Ciencias Humanas", "Psicología", 5, "david@gmail.com", "3345678901", 2, "", False],
            ["Marta", "Lopez", "A020105", "Ciencias de la Salud", "Biología", 6, "marta@gmail.com", "3456789012", 1, "", False],
            ["Javier", "Garcia", "A020106", "Ciencias Humanas", "Filosofía", 7, "javier@gmail.com", "3567890123", 3, "", False],
            ["Sofia", "Sanchez", "A020107", "Ciencias Humanas", "Comunicación", 8, "sofia@gmail.com", "3678901234", 2, "", False],
            ["Roberto", "Gutierrez", "A020108", "Ciencias Humanas", "Derecho", 9, "roberto@gmail.com", "3789012345", 1, "", False],
            ["Marina", "Romero", "A020109", "Ciencias Humanas", "Derecho", 10, "marina@gmail.com", "3890123456", 3, "", False],
            ["Ricardo", "Fernandez", "A020110", "Ingeniería, Diseño y Ciencias Aplicadas", "Ingeniería de Sistemas", 1, "ricardo@gmail.com", "3901234567", 2, "", False]
        ]



        for applicant in applicantValues :
            Applicant(
                name=applicant[0], lastName=applicant[1], studentCode=applicant[2], faculty=applicant[3],
                major=applicant[4], semester=applicant[5], email=applicant[6], phone=applicant[7],
                status=applicant[8], image=applicant[9], deleted=applicant[10]
            ).save()

        announcementAndApplicantValues = [
            [Announcements.objects.get(id=1), Applicant.objects.get(studentCode="A020100"), False],
            [Announcements.objects.get(id=2), Applicant.objects.get(studentCode="A020101"), False],
            [Announcements.objects.get(id=3), Applicant.objects.get(studentCode="A020102"), False],
            [Announcements.objects.get(id=4), Applicant.objects.get(studentCode="A020103"), False],
            [Announcements.objects.get(id=5), Applicant.objects.get(studentCode="A020104"), False],
            [Announcements.objects.get(id=1), Applicant.objects.get(studentCode="A020105"), False],
            [Announcements.objects.get(id=2), Applicant.objects.get(studentCode="A020106"), False],
            [Announcements.objects.get(id=3), Applicant.objects.get(studentCode="A020107"), False],
            [Announcements.objects.get(id=4), Applicant.objects.get(studentCode="A020108"), False],
            [Announcements.objects.get(id=5), Applicant.objects.get(studentCode="A020109"), False]
        ]


        for announcementAndApplicant in announcementAndApplicantValues:
            AnnouncementAndApplicant(
                announcement=announcementAndApplicant[0],
                applicant=announcementAndApplicant[1],
                deleted=announcementAndApplicant[2]
            ).save()

        
    operations = [
        migrations.RunPython(insert_default_values),
    ]


